*day02

*자료형 / 변수
	
	자료형 종류	

  ==  기본형 ==
			용량		
	byte		1		  -128 ~ 127

					  0000 0000
					  
					  0111 1111 = 127
					  1111 1111 = -1

정수	short		2		-32768 ~ 32767
	int		4		 -21억 ~ 21억
	long		8		    ±900경

실수	float		4
	double		8

문자	char		2

논리	boolean		1

  == 참조형 ==

문자열 String
================================================================================
* 자료형 : ram 공간에 데이터를 넣기위한 메모리를 확보하는 것

	"홍길동" ---> 이 형식에 맞는 자료형을 선택해야한다!    String
	123	 ---> int
	10.3	 ---> double
	10.3F	 ---> float(F가 붙어있을 때만 float을 쓴다.)


* 자료형 뒤에는 이름을 붙여야 한다.
	      (식별자, identified)
(함수에도 이름, 클래스 이름, 상수 이름...)

int 이름;	자료형(타입) 뒤에 붙이는 영어단어를 "변수 variable"이라고 부르자
int 이름;
int 이름;
int 이름;
int 이름;


// 변수선언 //
	class A{

		public static void main(String [] args){

			int   a          =          10;
	       	      자료형 변수   대입연산자	   value(리터럴,literal)
		}

	}


*변수, 메서드, 클래스 이름 짓기 규칙
	
	1. 연상할 수 있는 단어로 지어주자!
	
	2. 변수는 소문자, 메서드도 소문자
	   클래스는 대문자로 시작.	(규칙-지켜주는게 좋다, 문법은 아니다)
	   
	3. 맨 앞에 숫자가 오면 에러!
	   중간에 공백이 있어도 에러!
	   특수문자가 있어도 에러!
	   ($ 와 _ 은 사용할 수 있다)
	   키워드를 이름으로 사용하면 에러
	   
	4. 대문자와 소문자는 서로 다른 단어이다.
		Max	 ≠  max
	

*형변환 : casting

	기존의 데이터 타입이 바뀌는 것
	
  1. 자동 형변환(implicit)
	1) 정수형
		byte, short, char 타입이 연산을 하면
		모두 정수형 int로 바뀐다.

	2) 같은 타입끼리 연산하면 해당타입으로 결과값이 생긴다.
		5+3 -> int타입

	   "다른 타입"끼리 연산하면 둘 중에 큰 타입으로 바뀐다.
		10/2 -> 5(value)가 어떤 "타입"에 담겨 있는가?
					 int
		 5/2 -> 2(value)...1(나머지)
			2.5
		같은 타입(int)끼리 연산하면 결과값도 int가 되어야한다.
			실수가 되면 안된다.
		5/2.0     5 -> 32개의 비트    --->2.5라는 타입으로 소수부를 볼 수 있다.
			2.0 -> 64개의 비트	  


  2. 강제 형변환(explicit)

	()대상
	(타입)대상
		(int)5.6 -> 5.6을 int타입으로 바꿔라! -> 5    (버림)
		(double)10 -> 10을 double타입으로 바꿔라! -> 10.0
============================================================================
	double a = 10;	//10을 10.0으로 바꾼다.
		10 -> 4바이트 int
		a  -> 8바이트 double //자동형면환으로 인해 10이 10.0으로 바뀜
	int a = (int)10.0;	// 10.0을 소수점을 버림으로써 int타입으로 바꿈.
				// 강제 형변환 
	

  
  3. 소수점 출력 방법! printf()


=============================================================================
*입력 받기

  1. 프로그램을 실행하고 나서
	변수에게 값을 넣을 수 있다.


  2. Scanner

	1) Scanner 클래스를 사용하기 위해 import 작업을 해야한다.
	2) Scanner 클래스를 ram에 등록하기 위해
			인스턴스 작업이 필요하다
	3) 인스턴스를 사용하기 위해 "객체" 연결 작업
	4) 객체.메서드() 호출할 수 있다.

	5) 메서드 종류에 따라서 정수, 실수, 문자열 등을 입력받을 수 있다.
	6) 입력 받은 데이터를 변수에 담아 놓고 사용하자!

  3. JOptionPane

	대화상자(dialog)를 열 수 있는 메서드를 갖고 있는 클래스

	.showInputDialog()
	.showMessageDialog()
	...

	JOptionPane.메서드()   ----> 호출 가능!!!

		클래스.메서드() 를 "클래스 메서드"라고 부름.
		
		특징 : 메서드를 만들 때 static이 붙는다.			static void main ==> 스태틱메서드
		       호출할 때, 이탤릭체(기울어진 글씨체)로 보여진다.
		단점 : 항상 메모리에 상주하고 있어야 함.
		장점 : 필요할 때 바로 꺼내 쓸 수 있는 즉각성

	String name = JOptionPane.showInputDialog("이름을 입력하세요");
	String ki = JOptionPane.showInputDialog("키를 입력하세요");
	String weight = JOptionPane.showInputDialog("몸무게를 입력하세요");

	String n1 = JOptionPane.showInputDialog("정수 입력");
	String n2 = JOptionPane.showInputDialog("정수 입력");

	syso(n1+n2); 안된다... ex) n1=12, n2=13이면 1213으로 나옴
	
	"10" ---> 10으로 바꿔주는 기능(추출해 내는 기능)(클래스)가 있다.
	"10.1"--> 10.1 문자열실수 -> 실수 타입으로 변경시키는 기능!

	-문자열 정수 ->정수
		Integer.메서드("10")      <--- 클래스메서드

	int to = Integer.parseInt("10"); : 파싱하다(추출하다)	-->>	10	변수에 저장해서 활용
	


	-문자열 실수 ->실수
		Double
	Double d = Double.parseDouble("10.1");	-->>	10.1(double)

