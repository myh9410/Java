* day 06 * 배열

*기억부류(storage - class)
	: 변수(객체)들 항상 ram에 올라가야 한다.
		      (인스턴스화 되다 : 실제 메모리에 올라가다)


	: int num;	     ---> 이제부터 4byte 메모리를 ram에 만들겠다.
	  num = 데이터;	메모리를 사용하고 있다.

	: 10, 20, 30	3개의 데이터가 있다.

	int, int, int numbers = 10, 20, 30;	불가능
		numbers라는 변수에 값을 3개를 넣어놓고 빼서 씀 ->배열
		이름 하나에 여러개의 데이터를 보관해 놓으면 여러저러 편하게 관리할 수 있다.

	기본형 타입을 묶어서 나만의 새로운 타입을 만든다.

		#1. 배열 방식 : 데이터만 보관하는 데이터 전용 타입

		#2. 클래스 방식 : 데이터 + 메서드를 보관함
	
	나만의 타입!!!    ->   ram에서 특별한 위치	에 만들어져야 한다.
				 heap(동적 메모리) 라고 한다.

		배열타입, 클래스타입 -> heap을 사용해야 한다.

	ram의 구조 (변수, 배열&클래스, 상수들 공간, static 공간)....


	메서드{
		변수 생성(블럭의 끝에서 죽음, 메서드 내에서만 사용가능. local variable 지역 변수)
		int num = 10;		
		배열을 만들자
		new int[3];			<---- heap이라는 곳에 만들어짐.
		new Scanner(System.in)		<---- new  :  heap(동적 메모리)을 사용하겠다.
							      배열과 클래스 만드는데 사용.
		// 지역 변수와 동적 변수 차이 --- 지역 변수는 local의 끝에서 사라짐
				             --- 동적 변수는 언제든 없앨 수 있음.
	}


			ram

	stack	|	heap	|	데이터 영역
		|		|
		|		|

*배열(array)
	
	: 다량의 데이터를 한꺼번에 처리 할 수 있는 기법
	: 동일한 데이터들이 연속적으로 모여 있는 "집합 - 컬렉션(Collection)" 이다.
	: for문 등으로 일괄처리가 가능하다.

	
	1. 만드는 방법
		1) 명시적 방법 : 눈에 띄게 배열을 만듬.        ==> 		int형, 3개만들것

			(참조) 변수 = 배열



			int형 3개 만들기
			int []  arr = new int[3];

			---데이터 넣기

		배열로 표현하는 변수
			arr[0] = 10;	arr[첫번째 방] = 데이터;
			arr[1] = 20;	arr[두번째 방] = 데이터;
			arr[2] = 30;	arr[세번째 방] = 데이터;
				n개 만들면 방 번호는 n-1
				n개의 방	   배열수는 n+1




		2) 암시적 방법 : 갯수를 컴파일러가 "알아서" 파악.
			
			int [] arr = {2,3,4,2,3,5,4,3};
					초기 값을 바로 넣고 있다.
					알아서 갯수를 만들어서
					배열을 new 시켜 놓은 후
					각 방에다가 값을 넣어 놓는다.
				



		3) 명시적 + 암시적 방법

			int num = 0;
			double d = 0.0;
			String s = "";
			int [] arr = null;		//참조변수의 초기값?
						//항상 null이다. ("문자열 제외")
		
			arr = new int [10-5];
			arr = null;			--|
			arr new int[12];		--|초기화 , 새로운 배열 만들어서 기존 배열 제거

			-----------------------

			arr = {10, 20, 30};	//에러, 초기값을 바로 넣을 수 없다.

	배열임을 알려줘야함		표시! - 대괄호 안에 숫자 금지! 빈칸으로...
			arr = new int[]{10, 20, 30};
					초기값 나열!!



=======================================================================
*클래스와 객체
















